rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules

    // Allow only authenticated access to database
    match /rooms/{roomId} {
      function isPermittedToModify() {
        return request.auth != null && request.auth.token.email in get(/databases/$(database)/documents/rooms/$(roomId)).data.usernames;
      }

      allow read, create: if request.auth != null;
      allow update: if request.auth != null && request.resource.data.diff(resource.data).changedKeys().hasOnly(['usernames']);

      match /sessions/{document=**} {
         allow read, write: if isPermittedToModify()
      }
    }
  }
}
