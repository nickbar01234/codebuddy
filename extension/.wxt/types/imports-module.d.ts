// Generated by wxt
// Types for the #import virtual module
declare module "#imports" {
  export { Browser, browser } from "wxt/browser";
  export { fakeBrowser } from "wxt/testing";
  export { useAppConfig } from "wxt/utils/app-config";
  export {
    ContentScriptContext,
    WxtWindowEventMap,
  } from "wxt/utils/content-script-context";
  export {
    IframeContentScriptUi,
    IframeContentScriptUiOptions,
    createIframeUi,
  } from "wxt/utils/content-script-ui/iframe";
  export {
    IntegratedContentScriptUi,
    IntegratedContentScriptUiOptions,
    createIntegratedUi,
  } from "wxt/utils/content-script-ui/integrated";
  export {
    ShadowRootContentScriptUi,
    ShadowRootContentScriptUiOptions,
    createShadowRootUi,
  } from "wxt/utils/content-script-ui/shadow-root";
  export {
    AutoMount,
    AutoMountOptions,
    ContentScriptAnchoredOptions,
    ContentScriptAppendMode,
    ContentScriptInlinePositioningOptions,
    ContentScriptModalPositioningOptions,
    ContentScriptOverlayAlignment,
    ContentScriptOverlayPositioningOptions,
    ContentScriptPositioningOptions,
    ContentScriptUi,
    ContentScriptUiOptions,
    StopAutoMount,
  } from "wxt/utils/content-script-ui/types";
  export { WxtAppConfig, defineAppConfig } from "wxt/utils/define-app-config";
  export { defineBackground } from "wxt/utils/define-background";
  export { defineContentScript } from "wxt/utils/define-content-script";
  export { defineUnlistedScript } from "wxt/utils/define-unlisted-script";
  export { defineWxtPlugin } from "wxt/utils/define-wxt-plugin";
  export {
    InjectScriptOptions,
    ScriptPublicPath,
    injectScript,
  } from "wxt/utils/inject-script";
  export { InvalidMatchPattern, MatchPattern } from "wxt/utils/match-patterns";
  export {
    MigrationError,
    StorageArea,
    StorageAreaChanges,
    StorageItemKey,
    WxtStorage,
    WxtStorageItem,
    storage,
  } from "wxt/utils/storage";
  export {
    useAppState,
    usePeerSelection,
    useRTC,
    useSession,
  } from "../src/hooks/index";
  export { default as useAuthenticate } from "../src/hooks/useAuthenticate";
  export { default as useDevReload } from "../src/hooks/useDevReload";
  export { default as useDevSetupRoom } from "../src/hooks/useDevSetupRoom";
  export {
    UseFirebaseListenerProps,
    useFirebaseListener,
  } from "../src/hooks/useFirebaseListener";
  export { default as useInferTests } from "../src/hooks/useInferTests";
  export { default as useLanguageExtension } from "../src/hooks/useLanguageExtension";
  export { useOnMount } from "../src/hooks/useOnMount";
  export {
    DEBOUNCE_DELAY_MS,
    REFRESH_INTERVAL_MS,
    default as usePaginate,
  } from "../src/hooks/usePaginate";
  export { Resource, default as useResource } from "../src/hooks/useResource";
  export { useSelectedQuestions } from "../src/hooks/useSelectedQuestions";
  export { defaultTo, identity, promisedIdentity } from "../src/utils/cast";
  export { cn } from "../src/utils/cn";
  export {
    appendClassIdempotent,
    disablePointerEvents,
    generateId,
    hideToRoot,
    waitForElement,
  } from "../src/utils/dom";
  export { assertUnreachable } from "../src/utils/error";
  export {
    calculateNewRTT,
    formatTime,
    getUnixTs,
    timeAgo,
  } from "../src/utils/heartbeat";
  export { withPayload } from "../src/utils/messages";
  export { codeViewable } from "../src/utils/model";
  export { poll, wait } from "../src/utils/poll";
  export { capitalize } from "../src/utils/string";
  export {
    constructUrlFromQuestionId,
    getQuestionIdFromUrl,
    getSessionId,
  } from "../src/utils/url";
  export { isString, isValidEmail } from "../src/utils/validation";
}
